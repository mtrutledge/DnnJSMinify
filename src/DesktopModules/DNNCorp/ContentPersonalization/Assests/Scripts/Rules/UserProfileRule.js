
﻿
window.dnn=dnn||{};window.dnn.personalizedTabs=dnn.personalizedTabs||{};window.dnn.personalizedTabs.rules=dnn.personalizedTabs.rules||{};(function IIFE(){var UserProfileRuleClass;UserProfileRuleClass=(function IIFE(){'use strict';var HTML_PATH="Assests/Html/Rules/UserProfileTemplate.html";var _templateLoader,_service,_resx;var getService,getServiceUrl,getViewModel,remove,getDataTypeController,getViewModelValidation,onBeforeSend,makeRequest;UserProfileRule.class='UserProfileRule';UserProfileRule.type='Class';UserProfileRule.template;UserProfileRule.allowMultipleInstances=true;function UserProfileRule(onDeleteRuleCallback,resx){_resx=resx;this._id="";this._viewModel={};this._dataTypeController={};this._ruleElement=null;this.onDeleteRuleCallback=onDeleteRuleCallback;_templateLoader=window.dnn.personalizedTabs.TemplateLoader;if(!UserProfileRule.template){_templateLoader.readHtmlTemplate(dnn.getVar('dnn_content_personalization_resourceroot')+HTML_PATH,function(template){UserProfileRule.template=template;});}}
getService=function(){if(!_service){_service=$.dnnSF();}
return _service;};getServiceUrl=function(service,controller){return getService().getServiceRoot(service)+controller+'/';};onBeforeSend=function(xhr){getService().setModuleHeaders(xhr);};makeRequest=function(service,controller,method,type,params,data,callback,errorCallBack,sync){var d=data;if(params&&params.dataType==='json'){d=JSON.stringify(data);}
var request={url:getServiceUrl(service,controller)+method,type:type,data:d,async:!sync,beforeSend:$.proxy(onBeforeSend,this),success:function(data){if(typeof callback=="function"){callback(data);}},error:function(xhr){if(typeof errorCallBack=="function"){errorCallBack(xhr);}}}
$.extend(request,params);$.ajax(request);};getDataTypeController=function(property,self,data){self._dataTypeController=window.dnn.personalizedTabs.rules.userProfile.DataTypeController[property.DataType]();if(!self._dataTypeController){console.log("The type "+dataType+" still is not supported");return;}
self._viewModel.changes(true);self._viewModel.matchTemplate(self._dataTypeController.template);if(data&&data.PropertyInfo.PropertyId===property.PropertyId){self._viewModel.matchValue(self._dataTypeController.viewModelController.fillViewModel(property.PropertyId,self._viewModel.id,_resx,data));}else{self._viewModel.matchValue(self._dataTypeController.viewModelController.getViewModel(property.PropertyId,self._viewModel.id,_resx));}
var validationObject=getViewModelValidation(self._viewModel);var extendedValidationObject=$.extend({},validationObject,self._dataTypeController.viewModelController.getViewModelValidation(self._viewModel.matchValue()));self._viewModel.validationObservable=ko.validatedObservable(extendedValidationObject);$(self).trigger("validationUpdated",[self._id,self._viewModel.validationObservable]);self._viewModel.validationObservable.valueHasMutated();self._viewModel.changes(false);self._viewModel.matchValue.valueHasMutated();};getViewModelValidation=function(viewModel){return{selectedProperty:viewModel.selectedProperty}};getViewModel=function(self,data){self._viewModel={id:self._id,remove:remove,self:self,resx:_resx,changes:ko.observable(false),allowedProperties:ko.observableArray(UserProfileRule.allowedProperties),selectedProperty:ko.observable().extend({required:true}),matchTemplate:ko.observable(),matchValue:ko.observable()};self._viewModel.selectedProperty.subscribe(function onPropertyChanged(selectedProperty){getDataTypeController(selectedProperty,self,data);});if(data){UserProfileRule.allowedProperties.forEach(function(property,idx){if(data.PropertyInfo.PropertyId==property.PropertyId){self._viewModel.selectedProperty(property);}});};self._viewModel.validationObservable=ko.validatedObservable(getViewModelValidation(self._viewModel));};remove=function(){if(this.self.onDeleteRuleCallback&&typeof this.self.onDeleteRuleCallback==='function'){this.self.onDeleteRuleCallback(this.id);}};UserProfileRule.getId=function(){return"UserProfileRule";};UserProfileRule.getName=function(resx){return resx.RulesUserProfileName;};UserProfileRule.loadTemplate=function(callback){if(!UserProfileRule.template){_templateLoader.readHtmlTemplate(dnn.getVar('dnn_content_personalization_resourceroot')+HTML_PATH,function(template){UserProfileRule.template=template;callback();});}else{callback();}}
UserProfileRule.initStaticElements=function(){UserProfileRule.allowedProperties=[];makeRequest('ContentPersonalization','UserProfile','GetProperties','get',null,null,function(data){data.forEach(function(property,idx){UserProfileRule.allowedProperties.push(property);});});}
UserProfileRule.prototype.getId=function(){return this._id;};UserProfileRule.prototype.injectRule=function(parentElement,afterInjectCallback,data){var self=this;UserProfileRule.loadTemplate(function(){var dateNow=new Date().getTime();var html=UserProfileRule.template.replace(/\{0\}/g,dateNow);parentElement.append(html);self._id=dateNow;self._ruleElement=$("#{0}".replace(/\{0\}/g,self._id));getViewModel(self,data);ko.applyBindings(self._viewModel,self._ruleElement[0],{decorateElement:true,insertMessages:true,deep:true});afterInjectCallback(self,parentElement,self._viewModel.validationObservable);});}
UserProfileRule.prototype.getDataToBeSent=function(){if(!this._viewModel){return;}
var matchValueData=this._dataTypeController.viewModelController.fillData(this._viewModel.matchValue());return{type:"UserProfileRule",PortalId:parseInt(dnn.getVar('dnn_content_personalization_portalId')),PropertyInfo:{PropertyId:this._viewModel.selectedProperty().PropertyId,MatchValue:matchValueData}};}
UserProfileRule.prototype.freeContext=function(){var element=$("#{0}".replace(/\{0\}/g,this._id));ko.cleanNode(element);}
UserProfileRule.prototype.doesRuleAllowMultipleInstances=function(){return UserProfileRule.allowMultipleInstances;};UserProfileRule.prototype.getRuleClass=function(){return UserProfileRule.class;};return UserProfileRule;})();window.dnn.personalizedTabs.rules.UserProfileRule=UserProfileRuleClass;}).call(this);