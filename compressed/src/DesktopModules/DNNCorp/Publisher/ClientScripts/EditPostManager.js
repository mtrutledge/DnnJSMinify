window.dnn=dnn||{},window.dnn.modules=dnn.modules||{},window.dnn.modules.publisher=dnn.modules.publisher||{},window.dnn.modules.publisher.EditPostManager=function($,ko){"use strict";function cssanimations(){return void 0!==imageContainer[0].style.animationName}function getBodyHtml(){return $(configuration.contentSelector).html()}function setBodyHtml(html){""!==html&&$(configuration.contentSelector).html(html)}function init(config){publishingManager=dnn.modules.publisher.PublishingManager,configuration=config,config.post&&(viewModel.post.title(config.post.title),viewModel.post.mainImageFileId(config.post.mainImageFileId),viewModel.post.mainImageUrl(config.post.mainImageUrl),setBodyHtml(config.post.body)),addSubscribersWhenPostChanges();var viewModelBinding=$(config.bindingElementSelector),node=viewModelBinding[0];ko.dataFor(node)&&ko.cleanNode(node),ko.applyBindings(viewModel,node),dnn.modules.publisher.UploadManager.setOnImageUploaded(setImageFromResponse),changeImageDialog=viewModelBinding.find("div.change-image-dialog"),changeImageDialog.append($(config.uploadPanelSelector)),imageContainer=viewModelBinding.find("div.image")}function checkNotEmpty(text,message){return""!==text.trim()||(isShowingError||(isShowingError=!0,$.dnnNotif({dialogClass:"noTittle",height:50,styleBlue:!0,text:message,type:"warning",onCloseCallback:function(){isShowingError=!1}})),!1)}function savePost(callback200,callbackError){var data=getPostRequest();null!=data&&dnn.modules.publisher.RequestUtils.request("Publisher","EditPost","UpdatePost","POST",data,callback200,callbackError)}function deletePost(){$.dnnConfirm({text:configuration.resx.deleteConfirmText,yesText:configuration.resx.yesText,noText:configuration.resx.noText,title:configuration.resx.deleteConfirmTitleText,callbackTrue:function(){var data={contentItemId:configuration.contentItemId};dnn.modules.publisher.RequestUtils.request("Publisher","EditPost","DeletePost","POST",data,function(){window.location.href=configuration.listUrl})}})}var addSubscribersWhenPostChanges,onPostChangedCallback,setImageFromResponse,closeImageDialog,notifyBodyChange,getPostRequest,changeImageDialog,imageContainer,configuration,publishingManager,isShowingError=!1,changesState={changesInVersionedFields:!1,changesInNonVersionedFields:!1,implyUrlChange:!1},viewModel={editingImage:ko.observable(!1),highlightImage:ko.observable(!1),previousImageBackground:ko.observable("none"),post:{title:ko.observable(""),mainImageUrl:ko.observable(null),mainImageFileId:ko.observable()}};return viewModel.editMainImage=function(){viewModel.highlightImage(!1),viewModel.editingImage(!0),viewModel.previousImageBackground("url("+viewModel.post.mainImageUrl()+")"),setTimeout(function(){changeImageDialog.dialog({modal:!0,autoOpen:!0,dialogClass:"dnnFormPopup",title:configuration.resx.changeImageText,resizable:!1,width:700,height:"auto",close:function(){viewModel.highlightImage()||viewModel.editingImage(!1)}})},500)},viewModel.animationEnd=function(x,e){switch(console.log(e.originalEvent.animationName),e.originalEvent.animationName){case"fade-animation":viewModel.previousImageBackground("none");break;case"highlight-animation":viewModel.editingImage(!1),viewModel.highlightImage(!1)}},viewModel.hidePanels=function(){return configuration.hidePanels(),!0},closeImageDialog=function(){changeImageDialog.is(".ui-dialog-content")&&changeImageDialog.dialog("close")},viewModel.deleteMainImage=function(){changeImageDialog.is(".ui-dialog-content")&&changeImageDialog.dialog("destroy"),viewModel.editingImage(!1),viewModel.highlightImage(!1),viewModel.post.mainImageUrl(null),viewModel.post.mainImageFileId(null)},viewModel.updateTitle=function(d,e){viewModel.post.title($(e.target).text())},addSubscribersWhenPostChanges=function(){viewModel.post.title.subscribe(function(newValue){changesState.implyUrlChange=!0,changesState.changesInNonVersionedFields=!0,onPostChangedCallback()}),viewModel.post.mainImageUrl.subscribe(function(newValue){changesState.changesInNonVersionedFields=!0,onPostChangedCallback()}),viewModel.post.mainImageFileId.subscribe(function(newValue){changesState.changesInNonVersionedFields=!0,onPostChangedCallback()})},notifyBodyChange=function(){changesState.changesInVersionedFields=!0,onPostChangedCallback()},onPostChangedCallback=function(){publishingManager.notifyAboutChange(changesState),dnn.modules.publisher.EditPostDetailsManager.syncTitleAndBody({title:viewModel.post.title(),body:getBodyHtml()})},setImageFromResponse=function(response){var r=JSON.parse(response);viewModel.post.mainImageUrl(r.path),viewModel.post.mainImageFileId(r.fileId),cssanimations()?viewModel.highlightImage(!0):viewModel.editingImage(!1),closeImageDialog()},getPostRequest=function(){var isPostCreation=!configuration.post,body=getBodyHtml();if(!checkNotEmpty(viewModel.post.title(),configuration.resx.titleIsRequired)||!checkNotEmpty(body,configuration.resx.bodyIsRequired))return null;var postRequest={mainImageFileId:viewModel.post.mainImageFileId(),title:viewModel.post.title(),body:body,postId:isPostCreation?null:configuration.post.postId,contentItemId:isPostCreation?null:configuration.post.contentItemId};if(isPostCreation){var changeAuthorManager=dnn.modules.publisher.ChangeAuthorManager;changeAuthorManager&&(changeAuthorManager.hide(),$.extend(postRequest,{authorUserId:changeAuthorManager.getAuthorUserId()}));var editPostDetailsManager=dnn.modules.publisher.EditPostDetailsManager;if(editPostDetailsManager){if(editPostDetailsManager.hide(),!editPostDetailsManager.isModelValid())return editPostDetailsManager.show(),null;$.extend(postRequest,editPostDetailsManager.getPostMetadata())}}return postRequest},{init:init,savePost:savePost,deletePost:deletePost,notifyBodyChange:notifyBodyChange,getPostRequest:getPostRequest}}(jQuery||$,ko);