window.dnn=dnn||{},window.dnn.personalizedTabs=dnn.personalizedTabs||{},window.dnn.personalizedTabs.rules=dnn.personalizedTabs.rules||{},function(){var GeographicLocationRuleClass;GeographicLocationRuleClass=function(){"use strict";function GeographicLocationRule(onDeleteRuleCallback,resx){_resx=resx,this._id="",this._viewModel={},this._ruleElement=null,this.onDeleteRuleCallback=onDeleteRuleCallback,_templateLoader=window.dnn.personalizedTabs.TemplateLoader,GeographicLocationRule.template||_templateLoader.readHtmlTemplate(dnn.getVar("dnn_content_personalization_resourceroot")+HTML_PATH,function(template){GeographicLocationRule.template=template})}var _templateLoader,_service,_resx,getService,getServiceUrl,getViewModel,remove,tokenInputResultsFormatter,addCountry,addRegion,isLocationInList,getRegionCompleteName,makeRequest,onBeforeSend,HTML_PATH="Assests/Html/Rules/GeographicLocationRuleTemplate.html",LOCATION_COUNTRY=1,LOCATION_SUBDIVISION=2;return GeographicLocationRule.class="GeographicLocationRule",GeographicLocationRule.type="Class",GeographicLocationRule.template,GeographicLocationRule.allowMultipleInstances=!1,getService=function(){return _service||(_service=$.dnnSF()),_service},getServiceUrl=function(service,controller){return getService().getServiceRoot(service)+controller+"/"},onBeforeSend=function(xhr){getService().setModuleHeaders(xhr)},makeRequest=function(service,controller,method,type,params,data,callback,errorCallBack,sync){var d=data;params&&"json"===params.dataType&&(d=JSON.stringify(data));var request={url:getServiceUrl(service,controller)+method,type:type,data:d,async:!sync,beforeSend:$.proxy(onBeforeSend,this),success:function(data){"function"==typeof callback&&callback(data)},error:function(xhr){"function"==typeof errorCallBack&&errorCallBack(xhr)}};$.extend(request,params),$.ajax(request)},getViewModel=function(self,data){if(self._viewModel={id:self._id,urlSearchCountry:getServiceUrl("ContentPersonalization","GeographicLocation")+"SearchCountry",urlSearchRegion:ko.observable(""),countries:ko.observableArray([]),regions:ko.observableArray([]),locations:ko.observableArray([]).extend({required:!0}),remove:remove,tokenInputResultsFormatter:tokenInputResultsFormatter,self:self,resx:_resx,skipRegion:function(){this.clearSelectedCountryAndRegion()},clearSelectedCountryAndRegion:function(){this.countries([]),this.regions([])},wasCountryInLocations:!1,areRegionsAvailable:GeographicLocationRule.areRegionsAvailable},self._viewModel.selectedCountry=ko.computed(function(){return this.countries().length>0?this.countries()[0]:null},self._viewModel),self._viewModel.selectedRegion=ko.computed(function(){return this.regions().length>0?this.regions()[0]:null},self._viewModel),self._viewModel.isSelectedCountry=ko.computed(function(){return null!=this.selectedCountry()},self._viewModel),self._viewModel.isNotSelectedCountry=ko.computed(function(){return null==this.selectedCountry()},self._viewModel),self._viewModel.urlSearchRegion=ko.computed(function(){var selectedCountry=this.selectedCountry();return null!=selectedCountry?getServiceUrl("ContentPersonalization","GeographicLocation")+"SearchSubdivision?c="+selectedCountry.id:""},self._viewModel),self._viewModel.thereAreLocationsInList=ko.computed(function(){return this.locations().length>0},self._viewModel),self._viewModel.countries.subscribe(function(newValue){newValue.length>0&&addCountry(self)}),self._viewModel.regions.subscribe(function(newValue){newValue.length>0&&addRegion(self)}),data){if(data.Countries){var countries=data.Countries;countries.forEach(function(country,idx){self._viewModel.locations.push({id:country.Iso2,name:country.CountryName,type:LOCATION_COUNTRY})})}if(data.Subdivisions){var regions=data.Subdivisions;regions.forEach(function(region,idx){self._viewModel.locations.push({id:region.SubdivisionIso,name:getRegionCompleteName(region.CountryName,region.SubdivisionName),type:LOCATION_SUBDIVISION,countryIso2:region.CountryIso2,countryName:region.CountryName,subdivisionName:region.SubdivisionName})})}}self._viewModel.validationObservable=ko.validatedObservable({locations:self._viewModel.locations})},addCountry=function(self){var country=self._viewModel.selectedCountry(),location={id:country.id,name:country.name,type:LOCATION_COUNTRY};self._viewModel.wasCountryInLocations=isLocationInList(self,location.id),self._viewModel.wasCountryInLocations||$("#locationsList").tokenInput("add",location),self._viewModel.areRegionsAvailable||self._viewModel.skipRegion()},addRegion=function(self){var country=self._viewModel.selectedCountry(),region=self._viewModel.selectedRegion(),location={id:region.id,name:getRegionCompleteName(country.name,region.name),type:LOCATION_SUBDIVISION,countryIso2:region.countryIso,countryName:region.countryName,subdivisionName:region.name};self._viewModel.wasCountryInLocations||$("#locationsList").tokenInput("remove",{id:region.countryIso}),isLocationInList(self,location.id)||$("#locationsList").tokenInput("add",location),self._viewModel.clearSelectedCountryAndRegion()},isLocationInList=function(self,id){for(var locations=self._viewModel.locations(),i=0;i<locations.length;i++)if(locations[i].id&&locations[i].id===id)return!0;return!1},getRegionCompleteName=function(countryName,regionName){return countryName+" - "+regionName},remove=function(){this.self.onDeleteRuleCallback&&"function"==typeof this.self.onDeleteRuleCallback&&this.self.onDeleteRuleCallback(this.id)},tokenInputResultsFormatter=function(item){return"<li class='user'><span>"+item.name+"</span></li>"},GeographicLocationRule.getId=function(){return"GeographicLocationRule"},GeographicLocationRule.getName=function(resx){return resx.RulesGeoIPName},GeographicLocationRule.loadTemplate=function(callback){GeographicLocationRule.template?(callback(),$('[id$="locationsList"]').prop("disabled",!0)):_templateLoader.readHtmlTemplate(dnn.getVar("dnn_content_personalization_resourceroot")+HTML_PATH,function(template){GeographicLocationRule.template=template,callback(),$('[id$="locationsList"]').prop("disabled",!0)})},GeographicLocationRule.initStaticElements=function(){GeographicLocationRule.areRegionsAvailable=!1,makeRequest("ContentPersonalization","GeographicLocation","AreRegionsAvailable","get",null,null,function(data){GeographicLocationRule.areRegionsAvailable=data.areRegionsAvailable})},GeographicLocationRule.prototype.getId=function(){return this._id},GeographicLocationRule.prototype.injectRule=function(parentElement,afterInjectCallback,data){var self=this;GeographicLocationRule.loadTemplate(function(){var dateNow=(new Date).getTime(),html=GeographicLocationRule.template.replace(/\{0\}/g,dateNow);parentElement.append(html),self._id=dateNow,self._ruleElement=$("#{0}".replace(/\{0\}/g,self._id)),getViewModel(self,data),ko.applyBindings(self._viewModel,self._ruleElement[0]),afterInjectCallback(self,parentElement,self._viewModel.validationObservable)})},GeographicLocationRule.prototype.getDataToBeSent=function(){if(this._viewModel){var countries=[],subdivisions=[];return this._viewModel.locations().forEach(function(location,idx){location.type===LOCATION_COUNTRY?countries.push({CountryName:location.name,Iso2:location.id}):subdivisions.push({CountryIso2:location.countryIso2,CountryName:location.countryName,SubdivisionIso:location.id,SubdivisionName:location.subdivisionName})}),{type:"GeographicLocationRule",Countries:countries,Subdivisions:subdivisions}}},GeographicLocationRule.prototype.freeContext=function(){var element=$("#{0}".replace(/\{0\}/g,this._id));ko.cleanNode(element)},GeographicLocationRule.prototype.doesRuleAllowMultipleInstances=function(){return GeographicLocationRule.allowMultipleInstances},GeographicLocationRule.prototype.getRuleClass=function(){return GeographicLocationRule.class},GeographicLocationRule}(),window.dnn.personalizedTabs.rules.GeographicLocationRule=GeographicLocationRuleClass}.call(this);