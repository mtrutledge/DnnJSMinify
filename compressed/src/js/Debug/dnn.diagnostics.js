function dnn_diagnosticTests(oParent){"dnn"==oParent.ns&&dnn.diagnostics.clearDebug(),"function"==typeof oParent.UnitTests&&(dnn.diagnostics.displayDebug("------- Starting "+oParent.pns+"."+oParent.ns+" tests (v."+(oParent.apiversion?oParent.apiversion:dnn.apiversion)+") "+(new Date).toString()+" -------"),oParent.UnitTests());for(var obj in oParent)null!=oParent[obj]&&"object"==typeof oParent[obj]&&null==__dnn_m_aryHandled[obj]&&null!=oParent[obj].pns&&dnn_diagnosticTests(oParent[obj])}function __dnn_documentLoaded(){dnn.diagnostics.debugWait=!1,dnn.diagnostics.displayDebug("document loaded... avoiding Operation Aborted IE bug"),dnn.diagnostics.displayDebug(dnn.diagnostics.debugArray.join("\n"))}Type.registerNamespace("dnn.diagnostics"),dnn.extend(dnn.diagnostics,{pns:"dnn",ns:"diagnostics",parserName:null,debugCtl:null,debugWait:null!=document.getElementById,debugArray:[],clearDebug:function(){return null!=this.debugCtl&&(this.debugCtl.value="",!0)},displayDebug:function(sText){if(null==this.debugCtl){if(dnn.dom.browser.type==dnn.dom.browser.InternetExplorer){var oBody=dnn.dom.getByTagName("body")[0];if(this.debugWait&&"complete"!=oBody.readyState)return dnn.debugWait=!0,this.debugArray[this.debugArray.length]=sText,void(null!=oBody.onload&&oBody.onload.toString().indexOf("__dnn_documentLoaded")!=-1||(oBody.onload=dnn.dom.appendFunction(oBody.onload,"__dnn_documentLoaded()")))}this.debugCtl=dnn.dom.getById("__dnnDebugOutput"),null==this.debugCtl&&(this.debugCtl=dnn.dom.createElement("TEXTAREA"),this.debugCtl.id="__dnnDebugOutput",this.debugCtl.rows=10,this.debugCtl.cols=100,dnn.dom.appendChild(oBody,this.debugCtl)),this.debugCtl.style.display="block"}return null==dnn.diagnostics.debugCtl?alert(sText):dnn.diagnostics.debugCtl.value+=sText+"\n",!0},assertCheck:function(sCom,bVal,sMsg){bVal?this.verbose&&this.displayDebug(sCom+" - PASSED"):this.displayDebug(sCom+" - FAILED ("+sMsg+")")},assert:function(sCom,bVal){this.assertCheck(sCom,1==bVal,"Testing assert(boolean) for true")},assertTrue:function(sCom,bVal){this.assertCheck(sCom,1==bVal,"Testing assert(boolean) for true")},assertFalse:function(sCom,bVal){this.assertCheck(sCom,0==bVal,"Testing assert(boolean) for false")},assertEquals:function(sCom,sVal1,sVal2){this.assertCheck(sCom,sVal1==sVal2,"Testing Equals: "+this._safeString(sVal1)+" ("+typeof sVal1+") != "+this._safeString(sVal2)+" ("+typeof sVal2+")")},assertNotEquals:function(sCom,sVal1,sVal2){this.assertCheck(sCom,sVal1!=sVal2,"Testing NotEquals: "+this._safeString(sVal1)+" ("+typeof sVal1+") == "+this._safeString(sVal2)+" ("+typeof sVal2+")")},assertNull:function(sCom,sVal1){this.assertCheck(sCom,null==sVal1,"Testing null: "+this._safeString(sVal1)+" ("+typeof sVal1+") != null")},assertNotNull:function(sCom,sVal1){this.assertCheck(sCom,null!=sVal1,"Testing for null: "+this._safeString(sVal1)+" ("+typeof sVal1+") == null")},assertStringLength:function(sCom,sVal1){this.assertCheck(sCom,null!=sVal1&&sVal1.length>0,"Testing for string length: "+this._safeString(sVal1)+" ("+(null==sVal1?"null":sVal1.length)+")")},assertNaN:function(sCom,sVal1){this.assertCheck(sCom,isNaN(sVal1),"Testing for NaN: "+this._safeString(sVal1)+" ("+typeof sVal1+") is a number")},assertNotNaN:function(sCom,sVal1){this.assertCheck(sCom,0==isNaN(sVal1),"Testing for NotNaN: "+this._safeString(sVal1)+" ("+typeof sVal1+") is NOT a number")},_safeString:function(s){return"string"==typeof s||"number"==typeof s?s:typeof s}});var __dnn_m_aryHandled=new Array;